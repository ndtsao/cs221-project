




Eolas Technologies Inc. v. Microsoft Corp.
United States Court of Appeals, Federal Circuit. | March 2, 2005 | 399 F.3d 1325 | 2005 WL 475391

Document Details

Outline
Synopsis
West Headnotes
Attorneys and Law Firms
Opinion
All Citations

KeyCite:

KeyCite Yellow Flag - Negative Treatment
 Not Followed as Dicta EX PARTE BRYAN T. STARBUCK, ROBERT L. ROUNTHWAITE, DAVID E. HECKERMAN, JOSHUA T. GOODMAN, ELIOT C. GILLUM, NATHAN D. HOWELL, AND KENNETH R. ALDINGER, Patent Tr. &amp; App. Bd., January 22, 2013

standard Citation:

Eolas Techs. Inc. v. Microsoft Corp., 399 F.3d 1325 (Fed. Cir. 2005)

All Citations:

399 F.3d 1325, 73 U.S.P.Q.2d 1782

Search Details

Search Query:

adv: NAME(”microsoft”)

Jurisdiction:

Illinois

Delivery Details

Date:

November 17, 2017 at 9:17 PM

Delivered By:

Vincent Sheu

Client ID:

SHEU VINCENT





KeyCite Yellow Flag - Negative Treatment
 	Not Followed as Dicta EX PARTE BRYAN T. STARBUCK, ROBERT L. ROUNTHWAITE, DAVID E. HECKERMAN, JOSHUA T. GOODMAN, ELIOT C. GILLUM, NATHAN D. HOWELL, AND KENNETH R. ALDINGER, Patent Tr. &amp; App. Bd., January 22, 2013
399 F.3d 1325
United States Court of Appeals,
Federal Circuit.
EOLAS TECHNOLOGIES INCORPORATED and the Regents of the University of California, Plaintiffs–Appellees,
v.
MICROSOFT CORPORATION, Defendant–Appellant.
No. 04–1234.
|
March 2, 2005.
|
Rehearing and Rehearing En Banc Denied May 3, 2005.*
Synopsis
Background: Owner of patent for internet browsing software sued software manufacturer for infringement. The United States District Court for the Northern District of Illinois, Zagel, J., construed claims, 2000 WL 1898853, rejected manufacturer’s inequitable conduct and invalidity defenses, 2003 WL 22078029, included foreign sales of accused product in any potential royalty award, 274 F.Supp.2d 972, and, following jury’s finding of infringement, rejected manufacturer’s post-trial motions, 2004 WL 170334. Manufacturer appealed.
 
Holdings: The Court of Appeals, Rader, Circuit Judge, held that:
 
[1] alleged prior art was not abandoned;
 
[2] fact issue existed as to whether patent was invalid in light of prior art; and
 
[3] software code, sent abroad by manufacturer on master disks for copying on to hard drives by foreign computer producers, was “component” of infringing products, within meaning of statute proscribing foreign assembly.
 
Affirmed in part, vacated in part, and remanded.
 


West Headnotes (21)


[1]

PatentsNovelty;  anticipation


291Patents
291VIIPatent Infringement
291VII(C)Actions
291VII(C)7Appellate Review
291k1965Scope, Standard, and Extent of Review
291k1970Particular Matters
291k1970(2)Patentability and Validity
291k1970(5)Novelty;  anticipation
(Formerly 291k324.55(4), 291k314(5))


Patent anticipation is question of fact, reviewed for substantial evidence. 35 U.S.C.A. § 102.
1 Cases that cite this headnote



[2]

PatentsQuestions of law or fact


291Patents
291IIPatentability and Validity
291II(E)Obviousness;  Lack of Invention
291II(E)4Evidence and Determination
291k800Questions of law or fact
(Formerly 291k16.13)


Patent obviousness is question of law premised on underlying findings of fact. 35 U.S.C.A. § 103.
13 Cases that cite this headnote



[3]

PatentsInequitable conduct


291Patents
291VIIPatent Infringement
291VII(C)Actions
291VII(C)7Appellate Review
291k1965Scope, Standard, and Extent of Review
291k1970Particular Matters
291k1970(16)Inequitable conduct
(Formerly 291k324.55(2), 291k324.54)


District court’s finding that patent is unenforceable due to inequitable conduct is reviewed for abuse of discretion; its findings on underlying factual issues of materiality and intent are reviewed for clear error.
1 Cases that cite this headnote



[4]

PatentsScope, Standard, and Extent of Review


291Patents
291VIIPatent Infringement
291VII(C)Actions
291VII(C)7Appellate Review
291k1965Scope, Standard, and Extent of Review
291k1966In general
(Formerly 291k324.5)


District court’s patent claim construction is reviewed without deference.
2 Cases that cite this headnote



[5]

CourtsParticular questions or subject matter
PatentsDe novo review in general


106Courts
106IIEstablishment, Organization, and Procedure
106II(G)Rules of Decision
106k88Previous Decisions as Controlling or as Precedents
106k96Decisions of United States Courts as Authority in Other United States Courts
106k96(7)Particular questions or subject matter
291Patents
291VIIPatent Infringement
291VII(C)Actions
291VII(C)7Appellate Review
291k1965Scope, Standard, and Extent of Review
291k1967De novo review in general
(Formerly 291k324.5)


Question of whether jury instruction on issue of patent law is erroneous is matter of Federal Circuit law, and is reviewed de novo.
4 Cases that cite this headnote



[6]

Federal CourtsStatutes, regulations, and ordinances, questions concerning in general


170BFederal Courts
170BXVIICourts of Appeals
170BXVII(K)Scope and Extent of Review
170BXVII(K)2Standard of Review
170Bk3574Statutes, regulations, and ordinances, questions concerning in general
(Formerly 170Bk763.1)


Court of Appeals reviews questions of statutory interpretation without deference.
Cases that cite this headnote



[7]

PatentsAbandonment of Invention


291Patents
291IIPatentability and Validity
291II(F)Other Challenges to Validity
291k837Abandonment of Invention
291k838In general
(Formerly 291k82)


Software inventor did not “abandon” invention, for purpose of determining whether it was prior art that invalidated third party’s subsequent patent, by creating and publicly disclosing improved version a few weeks after he demonstrated allegedly anticipating software to potential buyers; improved version contained same relevant features as original version. 35 U.S.C.A. § 102(g).
7 Cases that cite this headnote



[8]

PatentsPublic use


291Patents
291IIPatentability and Validity
291II(C)Novelty;  Anticipation
291II(C)5Prior Public Use or Sale
291k631Particular Products or Processes
291k633Public use
(Formerly 291k75)


Software inventor’s demonstration of invention to potential buyer’s employees without confidentiality agreements constituted “public use,” for purpose of determining whether software was prior art that invalidated third-party’s subsequent patent. 35 U.S.C.A. § 102(b).
11 Cases that cite this headnote



[9]

PatentsPrior knowledge or use in general


291Patents
291IIPatentability and Validity
291II(C)Novelty;  Anticipation
291II(C)1In General
291k482Prior knowledge or use in general
(Formerly 291k51(1))


Prior knowledge or use by others may invalidate patent if such knowledge or use was accessible to public, even if prior use was abandoned. 35 U.S.C.A. § 102(a, g).
6 Cases that cite this headnote



[10]

PatentsAccessibility to public


291Patents
291IIPatentability and Validity
291II(C)Novelty;  Anticipation
291II(C)5Prior Public Use or Sale
291k612What Constitutes Public Use
291k614Accessibility to public
(Formerly 291k75)


Third party prior use accessible to public can be public use bar to patentability. 35 U.S.C.A. § 102(b).
5 Cases that cite this headnote



[11]

PatentsSingle reference disclosing every element or limitation of claim


291Patents
291IIPatentability and Validity
291II(C)Novelty;  Anticipation
291II(C)1In General
291k483Prior Art and Relation of Claimed Invention Thereto
291k489Number of Prior Art References;  Combinations
291k489(2)Single reference disclosing every element or limitation of claim
(Formerly 291k72(1))


To anticipate patent, single reference must teach each and every limitation of claimed invention. 35 U.S.C.A. § 102(b).
4 Cases that cite this headnote



[12]

PatentsNovelty;  anticipation
PatentsObviousness;  lack of invention


291Patents
291VIIPatent Infringement
291VII(C)Actions
291VII(C)6Judgment
291k1932Summary Judgment
291k1935Particular Cases
291k1935(4)Patentability and Validity
291k1935(6)Novelty;  anticipation
(Formerly 291k323.2(3))
291Patents
291VIIPatent Infringement
291VII(C)Actions
291VII(C)6Judgment
291k1932Summary Judgment
291k1935Particular Cases
291k1935(4)Patentability and Validity
291k1935(8)Obviousness;  lack of invention
(Formerly 291k323.2(3))


Issue of material fact as to whether prior art software enabled display of objects imbedded in Internet web pages precluded summary judgment on question of whether it anticipated or made obvious patent for Internet browsing software. 35 U.S.C.A. §§ 102(b), 103.
2 Cases that cite this headnote



[13]

PatentsComputers and Software
PatentsPrior Description in Printed Publication


291Patents
291IIPatentability and Validity
291II(C)Novelty;  Anticipation
291II(C)2Particular Fields of Invention
291k531Computers and Software
291k532In general
(Formerly 291k73)
291Patents
291IIPatentability and Validity
291II(C)Novelty;  Anticipation
291II(C)4Prior Description in Printed Publication
291k591In general
(Formerly 291k67.1)


When determining validity of software patent, it is earlier software product itself that constitutes prior art, rather than later published abstract associated with that earlier product.
Cases that cite this headnote



[14]

PatentsState of the art


291Patents
291VConstruction and Operation of Patents
291V(A)In General
291k1341State of the art
(Formerly 291k161)


When interpreting disputed patent claim terms, court accords terms their customary meaning in the art at time of invention.
Cases that cite this headnote



[15]

PatentsSpecifications and Drawings;  Written Description


291Patents
291VConstruction and Operation of Patents
291V(A)In General
291k1327Specifications and Drawings;  Written Description
291k1328In general
(Formerly 291k167(1.1))


Construing court should consult patent specification to determine whether patentee gave claim term meaning inconsistent with customary meaning in proper technological and temporal context.
5 Cases that cite this headnote



[16]

PatentsBusiness methods;  Internet applications


291Patents
291VConstruction and Operation of Patents
291V(C)Particular Fields of Invention
291k1391Computers and Software
291k1395Business methods;  Internet applications
(Formerly 291k101(2))


“Executable application” to be located and identified, as called for in patent for Internet browser software, meant any computer program code, that was not operating system or utility, that was launched to enable end user to directly interact with data.
11 Cases that cite this headnote



[17]

PatentsPreferred embodiment


291Patents
291VConstruction and Operation of Patents
291V(A)In General
291k1327Specifications and Drawings;  Written Description
291k1332Preferred embodiment
(Formerly 291k167(1.1))


Absent clear disclaimer, embodiments in specification do not limit broader patent claim language.
11 Cases that cite this headnote



[18]

PatentsHarmless and reversible error


291Patents
291VIIPatent Infringement
291VII(C)Actions
291VII(C)7Appellate Review
291k1965Scope, Standard, and Extent of Review
291k1972Harmless and reversible error
(Formerly 291k324.56)


Unobjected-to jury instruction, in action for infringement of Internet browser software patent, that inventors contemplated browser’s use of some outside resources such as operating system, was not so grievously unfair as to constitute reversible error; it was uncontested that operating system was involved in operation of computer programs.
4 Cases that cite this headnote



[19]

PatentsComputers and Software


291Patents
291VIIPatent Infringement
291VII(B)Particular Fields of Invention
291k1651Computers and Software
291k1652In general
(Formerly 291k259(3))


Software code, sent abroad by manufacturer on master disks for copying on to hard drives by foreign computer producers, was “component” of infringing products, within meaning of statute proscribing foreign assembly. 35 U.S.C.A. § 271(f)(1).
13 Cases that cite this headnote



[20]

PatentsIn general;  utility


291Patents
291XPatents Enumerated
291k2091In general;  utility
(Formerly 291k328(2))


US Patent 5,206,951, US Patent 5,581,686. Cited as Prior Art.
5 Cases that cite this headnote



[21]

PatentsIn general;  utility


291Patents
291XPatents Enumerated
291k2091In general;  utility
(Formerly 291k328(2))


US Patent 5,838,906. Cited.
Cases that cite this headnote



Attorneys and Law Firms
*1327 Martin R. Lueck, Robins, Kaplan, Miller & Ciresi L.L.P., of Minneapolis, Minnesota, argued for plaintiff-appellees. With him on the brief were Jan M. Conlin, Richard M. Martinez, and Munir R. Meghjee. Of counsel was Emily M. Rome.
Constantine L. Trela, Jr., Sidley Austin Brown & Wood LLP, of Chicago, Illinois, argued for defendant-appellant. With him on the brief were David T. Pritikin, Richard A. Cederoth, Robert N. Hochman, and Carter G. Phillips, of Washington, DC. Of counsel on the brief were H. Michael Hartmann, Brett A. Hesterberg, and Steven P. Petersen, Leydig, Voit & Mayer, Ltd., of Chicago, Illinois. Of counsel was Thomas Andrew Culbert, Microsoft Corporation, of Redmond, Washington.
Gregory S. Coleman, Weil, Gotshal & Manges LLP, of Austin, Texas, for amicus curiae Oracle Corporation. With him on *1328 the brief were Matthew D. Powers and Edward R. Reines, of Redwood Shores, California.
John D. Vandenberg, Klarquist Sparkman, LLP, of Portland, Oregon, for amici curiae Autodesk, Inc., et al.
Charles K. Verhoeven, Quinn Emanuel Urquhart Oliver & Hedges, of San Francisco, California, for amici curiae Netscape Communications Corporation, et al. With him on the brief were David A. Perlson and Jennifer A. Kash.
Gerard M. Stegmaier, Wilson Sonsini Goodrich & Rosati, of Reston, Virginia, for amicus curiae Association For Competitive Technology. With him on the brief was Craig M. Tyler.
Before RADER, Circuit Judge, FRIEDMAN, and PLAGER, Senior Circuit Judges.
Opinion
RADER, Circuit Judge.

The United States District Court for the Northern District of Illinois granted final judgment to Eolas Technologies Incorporated and the Regents of the University of California (collectively, Eolas) after a jury found that Microsoft Corporation (Microsoft) infringed claims 1 and 6 of U.S. Patent No. 5,838,906 (the ‘906 patent) and actively induced United States users of Internet Explorer to infringe claim 1. The district court also invoked 35 U.S.C. § 271(f) to include foreign sales of Internet Explorer in the royalty awarded to Eolas. Because the district court improperly granted judgment as a matter of law (JMOL) in Eolas’ favor on Microsoft’s anticipation and obviousness defenses and improperly rejected Microsoft’s inequitable conduct defense, this court vacates the district court’s decision and remands for a new trial on these issues. In addition, this court affirms the district court’s claim construction of “executable application” and finds the district court did not err in its jury instruction with regard to the claim limitation “utilized by said browser to identify and locate.” Finally, this court affirms the district court’s holding that “components,” according to section 271(f)(1), includes software code on golden master disks.
 

I.
On February 2, 1999, Eolas brought an infringement action against Microsoft. In particular, Eolas alleged infringement of claims 1 and 6 of the ’906 patent.1 The ’906 patent carries the title “distributed hypermedia method for automatically invoking external application providing interaction and display of embedded objects within a hypermedia document.” Eolas alleged that certain aspects of Microsoft’s Internet Explorer (IE) product incorporate its invention. Microsoft denied infringement and asserted that the claims were invalid and unenforceable.
 
Essentially, the claimed invention allows a user to use a web browser in a fully interactive environment. For example, the invention enables a user to view news clips or play games across the Internet. The ’906 claims require a web browser with certain properties. Specifically, the invention calls for a browser located in a “distributed hypermedia environment.”
 
In operation, the claimed browser locates a web page, or distributed hypermedia document, with a uniform resource locator *1329 (URL). Then the browser parses the text of the web page including an “embed text format” specifying an object external to the web page that has “type information associated with it” (i.e., spreadsheets, databases). The browser next uses that type information to identify and locate an executable application that automatically enables interactive viewing of the object. The inventors have consistently maintained that “[t]his invention was the first instance where interactive applications were embedded in Web pages.” The district court found that the invention was reduced to practice no later than January 27, 1994, when it was presented at a Web conference.
 
During prosecution of the ’906 patent, the examiner rejected the claims several times for obviousness. Besides the World Wide Web, HTTP and HTML, the examiner cited three main prior art references during prosecution: (1) the Mosaic Web Browser, which allows users to go from one website to another by clicking links on web pages and has some capability to display objects; (2) U.S. Patent No. 5,206,951 to Khoyi et al. (Khoyi), which describes an Object Linking and Embedding System (OLE);2 and (3) U.S. Patent No. 5,581,686 to Koppolu et al. (Koppolu), which covers some OLE technology where the application displaying data may be a component, such as an object handler that is implemented as a Dynamically Linked Library (DLL).3 The examiner allowed the claims on March 30, 1998.
 

Microsoft’s Invalidity Defenses
At trial, Microsoft presented evidence that the Viola Web browser (Viola), invented by Pei–Yuan Wei (Wei), was in public use more than one year before Eolas’ invention. Microsoft asserted that this prior art would invalidate the invention under 35 U.S.C. § 102(b). Microsoft also used the Viola reference to challenge validity on the basis of sections 102(a), 102(g) and 103. Wei testified at trial that he had written code for Viola so that the browser could handle embedded automatically-launched interactive programs in May 1993. Wei testified as well that he demonstrated that capability to Sun Microsystems engineers at that time. Microsoft corroborated existence of this code at trial through a computer demonstration of an archived file, dated May 12, 1993. The parties refer to this version of Viola as DX34. Wei demonstrated DX34 to two Sun Microsystems engineers on May 7, 1993.
 
Wei also demonstrated a different version of Viola to the district court. This second exhibit, DX37, was allegedly Wei’s attempt on May 27, 1993, to improve DX34. Apparently due to a bug in the program, Wei could not make the DX37 version function in the courtroom in conjunction with the Internet. Microsoft’s technical expert testified that both versions of the Viola code taught all of the limitations of the claims at issue.
 
The district court found as a matter of law that Wei abandoned, suppressed or concealed DX34 within the meaning of section 102(g) because Wei disclosed that version only to the Sun engineers and then changed it. The district court extended this finding to section 102(b) and found as a matter of law that since DX34 was abandoned, *1330 showing it to the Sun engineers could not constitute a public use. The district court prevented Microsoft from presenting any evidence of DX34 to the jury and later granted Eolas’ Rule 50 motion for JMOL in ruling that neither the anticipation nor obviousness defenses could be presented to the jury after hearing testimony on those issues from Microsoft’s expert.
 

Microsoft’s Inequitable Conduct Defense
Michael D. Doyle (Doyle), one of the inventors of the ’906 patent, knew of Viola yet did not disclose any information regarding that reference to the United States Patent and Trademark Office (PTO). On August 31, 1994, Doyle issued a press release to an e-mail list indicating that researchers at the University of California had “created software for embedding interactive program objects within hypermedia documents.” That same day, Wei contacted Doyle via e-mail in response to the press release. Wei alleged that his May 1993 demonstration of Viola (version DX34) to Sun Microsystems engineers exhibited a way to embed interactive objects and transport them over the web. Wei directed Doyle to his paper about Viola (the Viola paper), which was available on the Internet at least by August 13, 1994. Doyle downloaded and read the paper. In a later email exchange, Doyle attempted to get Wei to concede that he was not the first to invent. Additionally, Doyle told Wei the inventions were different.
 
On October 17, 1994, the University of California filed the ’906 patent application. In 1998, before issuance of the ’906 patent, Doyle did more research on Viola and made a folder labeled “Viola stuff.” This folder included press releases of two “beta”4 versions of Viola from February and March of 1994. Although available on the Internet, Doyle never obtained the Viola code.
 
The district court found that Doyle’s knowledge of Viola was not enough to trigger his obligation to bring it to the attention of the examiner of the ’906 patent. The district court determined that Viola was not prior art and as such not material. Although questioning Doyle’s credibility about his role in the prosecution of the patent, the trial court nonetheless found that he had acted with candor before the PTO because “it was the law and it was too dangerous not to do so.”
 

Claim Construction for Infringement
Claim 1 is a method claim; claim 6 a product claim. The parties and the district court focused on claim 6 to interpret the claims because Eolas asserted that the computer program product in claim 6 embodies the method of claim 1. Claim 6 reads:
6. A computer program product for use in a system having at least one client workstation and one network server coupled to said network environment, wherein said network environment is a distributed hyperrnedia environment, the computer program product comprising:
a computer usable medium having computer readable program code physically embodied therein, said computer program product further comprising:
computer readable program code for causing said client workstation to execute a browser application to parse a first distributed hypermedia document to identify text formats included in said distributed hypermedia document and to *1331 respond to predetermined text formats to initiate processes specified by said text formats;
computer readable program code for causing said client workstation to utilize said browser to display, on said client workstation, at least a portion of a first hypermedia document received over said network from said server, wherein the portion of said first hypermedia document is displayed within a first browser-controlled window on said client workstation, wherein said first distributed hypermedia document includes an embed text format, located at a first location in said first distributed hypermedia document, that specifies the location of at least a portion of an object external to the first distributed hypermedia document, wherein said object has type information associated with it utilized by said browser to identify and locate an executable application external to the first distributed hypermedia document, and wherein said embed text format is parsed by said browser to automatically invoke said executable application to execute on said client workstation in order to display said object and enable interactive processing of said object within a display area created at said first location within the portion of said first distributed hypermedia document being displayed in said first browser-controlled window.
U.S. Patent No. 5,838,906 (issued Nov. 17, 1998), col. 17, ll. 58—col. 18, ll. 30 (emphases added). After a Markman hearing, the district court construed the terms “executable application” and “utilized by said browser to identify and locate.” Eolas Techs., Inc. v. Microsoft Corp., No. 99 C 0626, 2000 WL 1898853 (N.D.Ill. Dec. 29, 2000). The district court determined that “executable application” as used in the ’906 patent refers to “any computer program code, that is not the operating system or a utility, that is launched to enable an end user to directly interact with data.” Id. 2000 WL 1898853, at *13. The district court also determined that “utilized by said browser to identify and locate” means that “the enumerated functions are performed by the browser.” Id. Microsoft appeals the “executable application” claim construction and the jury instruction given with regard to the term “utilized by said browser to identify and locate.”
 
The jury instruction regarding “utilized by said browser to identify and locate” included in relevant part:
Utilized by said browser to identify and locate means that the enumerated functions are performed by the browser.... The inventors contemplated the browser’s use of some outside resources such as the operating system as operating systems are always involved in the operation of computer programs. Nevertheless it must be the browser, not the operating system, that must do the heavy lifting of identifying and locating ....
 

Statutory Construction of 35 U.S.C. § 271(f)
Eolas claimed royalty damages for both foreign and domestic sales of Windows with IE. Microsoft moved, in limine, to prevent Eolas from seeking damages based on foreign sales under section 271(f).
 
Microsoft exports a limited number of golden master disks containing the software code for the Windows operating system to Original Equipment Manufacturers (OEMs) abroad who use that disk to replicate the code onto computer hard drives for sale outside of the United States. The golden master disk itself does not end up as a physical part of an infringing product. The district court denied Microsoft’s motion, finding that source code is the legal *1332 equivalent of a piece of computer hardware and that “in a legal sense, a[sic] source code is a made part of a computer product.” The district court determined that the code on the golden master disks constitutes “components” of an infringing product for combination outside of the United States under section 271(f).
 
After a jury trial, the district court entered judgment in favor of Eolas. The district court found that: (1) Microsoft did not show invalidity of the ’906 claims; (2) Microsoft did not proffer clear and convincing evidence of inequitable conduct; (3) Microsoft infringed claims 1 and 6 and actively induced United States users of IE to infringe claim 1; and (4) Eolas’s royalty for Microsoft’s infringement should include foreign sales of the patented computer code under section 271(f). The jury awarded Eolas a royalty of $1.47 per unit of infringing product, which amounted to a total award of $520,562,280. In its order, the district court issued a permanent injunction against Microsoft and awarded pre-judgment interest on the award. The permanent injunction has been stayed pending this appeal. This court has jurisdiction under 28 U.S.C. § 1295(a)(1).
 

II.
[1] [2] [3] Anticipation is a question of fact, which this court reviews for substantial evidence. In re Hyatt, 211 F.3d 1367, 1371 (Fed.Cir.2000). Obviousness is a question of law premised on underlying findings of fact. Graham v. John Deere Co., 383 U.S. 1, 17–18, 86 S.Ct. 684, 15 L.Ed.2d 545 (1966). This court “review[s] a grant of JMOL de novo, reapplying the district court’s JMOL standard anew.” Union Carbide Chems. & Plastics Tech. Corp. v. Shell Oil Co., 308 F.3d 1167, 1185 (Fed.Cir.2002). “In evaluating a Rule 50(a) motion, this court must examine the evidence to determine whether a jury could properly proceed to find a verdict for the party producing it, upon whom the onus of proof is imposed. In this regard, this court must view the evidence in a light most favorable to the non-moving party.” Mahurkar v. C.R. Bard, Inc., 79 F.3d 1572, 1576 (Fed.Cir.1996) (internal quotations omitted). This court reviews inequitable conduct for an abuse of discretion; “[t]he underlying factual issues of materiality and intent [are reviewed] for clear error.” CFMT, Inc. v. Yieldup Int’l Corp., 349 F.3d 1333, 1337 (Fed.Cir.2003).
 
[4] [5] [6] This court reviews claim construction without deference. Markman v. Westview Instruments, Inc., 52 F.3d 967, 979 (Fed.Cir.1995) (en banc). “The question of whether a jury instruction on an issue of patent law is erroneous is a matter of Federal Circuit law and is reviewed de novo.” Sulzer Textil A.G. v. Picanol N.V., 358 F.3d 1356, 1363 (Fed.Cir.2004). Lastly, “[t]his court reviews questions of statutory interpretation without deference.” U.S. Steel Group v. United States, 225 F.3d 1284, 1286 (Fed.Cir.2000).
 

III.
PRIOR ART DEFENSES
[7] As explained above, the district court found as a matter of law that DX34 was abandoned, suppressed or concealed within the meaning of section 102(g) because Wei disclosed that version to Sun Microsystems’ engineers and then changed it. The district court extended this finding to section 102(b), finding that abandonment of DX34 meant that the disclosure to the Sun Microsystems engineers could not constitute a public use. The district court prevented Microsoft from presenting any evidence of DX34 to the jury and later granted Eolas’ Rule 50 motion for JMOL that DX37 did not anticipate or render the ’906 patent obvious. Consequently, *1333 the jury did not consider Microsoft’s anticipation and obviousness defenses.
 
The district court erred in finding as a matter of law that DX34 was abandoned, suppressed, or concealed within the meaning of section 102(g). The relevant portion of section 102(g) states:
 
A person shall be entitled to a patent unless—
(g) (2) before such person’s invention thereof, the invention was made in this country by another inventor who had not abandoned, suppressed, or concealed it.
35 U.S.C. § 102(g) (2004).
 
This court’s case law distinguishes between two types of conduct that invoke the exception within section 102(g). Apotex USA, Inc. v. Merck & Co., 254 F.3d 1031, 1038 (Fed.Cir.2001). The first arises when an inventor actively conceals his invention from the public. Fujikawa v. Wattanasin, 93 F.3d 1559, 1567 (Fed.Cir.1996). Active concealment “refers to situations in which an inventor designedly, and with the view of applying it indefinitely and exclusively for his own profit, withholds his invention from the public.” Id. The second occurs when “abandonment, suppression, or concealment may be inferred based upon the prior inventor’s unreasonable delay in making the invention publicly known.” Dow Chem. Co. v. Astro–Valcour, Inc., 267 F.3d 1334, 1342 (Fed.Cir.2001).
 
This case does not fit into either category. The record contains no evidence that Wei either intentionally withheld DX34 from the public or unreasonably delayed a patent application or public disclosure. In contrast, the record indicates Wei not only demonstrated DX34 to two Sun Microsystems engineers without a confidentiality agreement (on May 7, 1993), but only twenty-four days later (on May 31, 1993) posted DX37 on a publicly-accessible Internet site and notified a Sun Microsystems engineer that DX37 was available for downloading. The district court erroneously concluded that the creation and public disclosure of DX37, an improved version of DX34, “abandoned” the invention under section 102(g).
 
The district court’s conclusion inappropriately narrowed the definition of “invention,” as used in section 102(g). This court’s interference case law illustrates this point. In interference cases, one party will sometimes assert that the other party abandoned the invention by unreasonably delaying disclosure of the invention after first reducing it to practice. However, this court excuses delay between the first reduction to practice and public disclosure if the inventor continued to refine, perfect, or improve the invention. Lutzker v. Plet, 843 F.2d 1364, 1367 (Fed.Cir.1988) (“An inference of suppression or concealment may be overcome with evidence that the reason for the delay was to perfect the invention.”). “The law does not punish an inventor for attempting to perfect his process before he gives it to the public. In fact, reasonable experimentation is frequently encouraged.” Frey v. Wagner, 24 C.C.P.A. 823, 87 F.2d 212, 215 (1937).
 
In this case, DX37, which includes the same contested feature as DX34, represents an improved version of Wei’s invention, not an entirely new invention, as the district court suggests. Because creating an improved version of an invention does not in any sense abandon the original invention, the district court erroneously excluded DX34 as prior art. Improvements may enhance an invention prior to disclosure or patent application. If improvements caused loss of the original invention under the erroneous rule adopted by the district court, the public would lose the benefit of diligent efforts to produce a *1334 more useful product. Eolas’ arguments that Wei’s changes to the functionality and architecture of DX34 show abandonment are unpersuasive because such changes merely reflect improvements in advancing versions of software code. Thus, this court remands for proceedings to consider whether DX34 is prior art and, if so, whether it invalidates the ’906 patent.
 
[8] This court also reverses the district court’s finding that Wei’s May 7, 1993, demonstration to two Sun Microsystems employees without confidentiality agreements did not constitute a public use under section 102(b). “Public use [under 35 U.S.C. § 102(b) ] includes any use of the claimed invention by a person other than the inventor who is under no limitation, restriction or obligation of secrecy to the inventor.” Netscape Communications Corp. v. Konrad, 295 F.3d 1315, 1320 (Fed.Cir.2002). Because the Sun Microsystems employees were under no limitation, restriction or obligation of secrecy to Wei, this court determines the demonstration may constitute a public use.
 
[9] [10] The district court erred in linking its section 102(b) public use finding to its section 102(g) abandonment finding. A public use under section 102(b) cannot be undone by subsequent actions. The inquiry into a section 102(b) public use proceeds independent of the inquiry into a section 102(g) abandonment. “[N]otwithstanding abandonment of the prior use—which may preclude a challenge under section 102(g)—prior knowledge or use by others may invalidate a patent under section 102(a) if the prior knowledge or use was accessible to the public.” Woodland Trust v. Flowertree Nursery, 148 F.3d 1368, 1370 (Fed.Cir.1998). Similarly, third party prior use accessible to the public is a section 102(b) bar. See Baxter Int’l, Inc. v. COBE Labs., Inc., 88 F.3d 1054, 1058–59 (Fed.Cir.1996).
 
Netscape Communications Corp. v. Konrad, 295 F.3d 1315 (Fed.Cir.2002), informs the application of these principles to this case. In Netscape, Konrad owned three computer-related patents. 295 F.3d at 1318. This court affirmed a finding of invalidity based on Konrad’s prior demonstration of the invention to two employees at the University of California without any obligation of confidentiality. Id. at 1319. Similarly, in the case at bar, Wei demonstrated DX34 to two Sun engineers who were under no confidentiality obligation. Indeed, the Sun engineers informed Wei that they intended to share information gleaned from Wei with other people at Sun. Eolas attempts to distinguish Netscape on the basis that Konrad was the patentee in that case, whereas here, Wei is a third party. However, a third party may, and often does, initiate a public use. See, e.g., Baxter, 88 F.3d at 1058–59. Therefore, Wei’s third-party disclosure may erect a public use bar.
 
Eolas further points to W.L. Gore & Associates, Inc. v. Garlock, Inc., 721 F.2d 1540, 1550 (Fed.Cir.1983), to advance its position that section 102(b) does not apply in this case. In Gore, a third party used the patented invention more than one year prior to the patentee’s application date and the court found no public use. Id. at 1549. Gore represents a different factual situation. The third party in Gore deliberately chose to keep the invention as a trade secret and avoid disclosure through a patent application. Accordingly, the Gore third party had a confidentiality agreement in place with its employees to prevent public disclosure of the method whose subject matter could not otherwise be publicly discerned. Id. This court found the Gore third party could not both elect to avoid the patent system and still invoke that system to erect a third-party public use bar to an inventor who disclosed the *1335 invention for patenting. Thus, the secret activity in Gore did not constitute public use. Id. This case, however, is very different. Wei made no attempt to maintain confidentiality or to deliberately evade disclosure. Wei’s activities may erect a third party public use bar.
 
[11] [12] In addition, this court vacates the district court’s JMOL that DX37 did not anticipate the ’906 patent. To anticipate, a single reference must teach each and every limitation of the claimed invention. See EMI Group N. Am., Inc. v. Cypress Semiconductor Corp., 268 F.3d 1342, 1350 (Fed.Cir.2001). When viewed in “a light most favorable” to Microsoft, the testimony by Microsoft’s expert, Dr. Kelly, presents a question of fact as to whether DX37 anticipates the ’906 patent. See Mahurkar v. C.R. Bard, Inc., 79 F.3d 1572, 1576 (Fed.Cir.1996).
 
Dr. Kelly testified that DX37 is in a computer usable medium with a program for use in a distributed hypermedia environment. Further, Dr. Kelly observed key features in DX37, such as a method to parse a hypermedia document to identify text formats, to display at least a portion of the hypermedia document on a client workstation, to include an embed text format that specifies the location of an object external to the hypermedia document, to identify and locate an executable application, and to automatically display the object and enable the user to interact with it. This testimony arguably supports Microsoft’s argument that DX37 teaches all of the limitations of the ’906 patent. The district court dismissed Dr. Kelly’s testimony as “conclusory.” This court hesitates to disturb the district court’s role in assessing evidence, but anticipation is a question of fact. Accordingly, this particular determination lay within the province of the jury.
 
The district court also erred in its granting JMOL on obviousness. Dr. Kelly’s testimony provided sufficient evidence to survive JMOL. In his testimony, Dr. Kelly discussed: (1) the scope of DX34 and DX37; (2) the potential differences between DX34 and DX37 and the claimed invention; and (3) the state of the art and the level of skill in the art in 1993. Dr. Kelly’s testimony could also be read to provide a suggestion to use a browser in a distributed hypermedia environment as in the claimed invention. Although Microsoft’s direct examination of Dr. Kelly focused on anticipation, the information solicited from Dr. Kelly might also support an argument of obviousness in the alternative. In light of this court’s determination that DX34 was not abandoned or concealed, Microsoft should also have the opportunity to present DX34 as part of its obviousness defense. See Panduit Corp. v. Dennison Mfg. Co., 810 F.2d 1561, 1568 (Fed.Cir.1987) (indicating that a key preliminary legal inquiry in obviousness analysis is: “what is the prior art?”). Weighing the facts in favor of the non-moving party, as required by Rule 50, a reasonable jury should have the opportunity to determine whether the claimed invention would have been obvious at the time of invention based on the record.
 
In sum, with respect to the district court’s prior art rulings, this court finds: the district court erred in finding as a matter of law that DX34 was abandoned, suppressed or concealed within the meaning of section 102(g); Wei’s May 7, 1993 demonstration to two Sun Microsystems employees without confidentiality agreements was a public use under section 102(b); and the district court erred in its JMOL that DX37 did not as a matter of law anticipate or render the ’906 patent obvious. As a result, this court remands for additional proceedings on these issues.
 

*1336 INEQUITABLE CONDUCT
[13] This court also vacates the district court’s decision on inequitable conduct. Again the district court based its inequitable conduct finding on the misunderstanding that Viola could not possibly constitute prior art. Relying on that erroneous determination, the district court concluded that Viola could not be material to patentability. As discussed above, the district court erred in determining that DX34 was abandoned, suppressed or concealed within the meaning of section 102(g). Further, the district court did not explain a reason for declining to consider DX37, also created prior to Doyle’s invention, as immaterial to patentability of the ’906 patent. In respect to potential prior art software under section 102(b), this court has explained that the software product constitutes prior art, not necessarily the later published abstract associated with that software product. In re Epstein, 32 F.3d 1559, 1567–68 (Fed.Cir.1994). Similarly, in the case at bar, the Viola browser itself, not the later developed Viola paper or “Viola stuff” file, constitutes prior art. On remand, the district court will have an opportunity to include this potential prior art in its inequitable conduct inquiry. At the same time, the district court may reconsider its findings on Doyle’s intent to deceive the PTO.
 

CLAIM CONSTRUCTION
[14] [15] When interpreting disputed claim terms, this court accords claim terms their customary meaning in the art at the time of invention. Home Diagnostics, Inc. v. Lifescan, Inc., 381 F.3d 1352, 1355 (Fed.Cir.2004). Further, a construing court should consult the specification to determine whether the patentee gave a claim term a meaning inconsistent with that customary meaning in the proper technological and temporal context. Metabolite Labs., Inc. v. Lab. Corp. of Am. Holdings, 370 F.3d 1354, 1360 (Fed.Cir.2004).
 
[16] The district court construed “executable application” to mean “any computer program code, that is not the operating system or a utility, that is launched to enable an end user to directly interact with data.” Microsoft asserts that this term should be construed as “standalone programs.” Because, absent a disclaimer, the claims of the ’906 patent are not limited to the embodiments listed in the specification, this court affirms the district court’s construction.
 
[17] As construed by the district court, “executable application” includes applications or components that are not standalone, i.e., DLLs such as spell check. Such applications or components can only run when invoked by some other application. Microsoft asserts that its construction is consistent with the ordinary meaning of the term and that the specification does not otherwise define the term. Microsoft correctly points out that all of the disclosed embodiments in the specification describe standalone programs (i.e., word processors and spreadsheets). Nonetheless, absent a clear disclaimer in the specification, the embodiments in the specification do not limit broader claim language. Liebel–Flarsheim Co. v. Medrad, Inc., 358 F.3d 898, 907–08 (Fed.Cir.2004).
 
The record shows that the term “executable application” does not have a customary meaning in the computer science field. Therefore, the district court appropriately declined to impose a sharp limitation on its scope. Accordingly, the trial court correctly perceived that “application” means “a computer program, that is not the operating system or a utility, that is designed to allow an end-user to perform some specific task.” The district court also found support for this meaning in technical dictionaries. For instance, the 1994 Microsoft *1337 Press Computer Dictionary defined “application” as “a computer program designed to help people perform a certain type of work. An application thus differs from an operating system (which runs a computer), a utility (which performs maintenance or general-purpose chores), and a language (with which computer programs are created)....” Microsoft Press Computer Dictionary 23–24 (2d ed.1994). A few years later, the same dictionary defined “application” as “a program designed to assist in the performance of a specific task, such as word processing, accounting, or inventory management. Compare utility.” Microsoft Press Computer Dictionary 27 (3d ed.1997). Still another source on the meaning of technical language defines “application” as a “program or group of programs designed for end users.” ZD Webopaedia, at http:// www.zdwebopedia. com/TERM/a/application.html.
 
Neither the specification nor the prosecution history disclaims the district court’s construction of “executable application.” The ’906 patent makes no reference to the phrase “executable application” except in the claims. See generally the ’906 patent. In addition, the specification repeatedly indicates that the preferred embodiment is only one possibility for practice of the invention. Id. Because this court “consistently declines to construe claims according to the preferred embodiment,” this court agrees with the district court that Microsoft’s proposed construction, limiting “executable application” to standalone programs, does not comport with the entire technological and temporal context for this term. N. Telecom Ltd. v. Samsung Elecs. Co., 215 F.3d 1281, 1293 (Fed.Cir.2000).
 
The prosecution history does not disclaim the district court’s construction of “executable application,” and thus supports the trial court’s reading of the term. According to Microsoft, the applicants argued that the Khoyi patent used library routines (i.e., components), while their invention did not. In addition, Microsoft claims the applicants argued the Koppolu patent taught away from using standalone applications. A review of the prosecution history does not show any disclaimer as Microsoft contends.
 
The applicants distinguished Khoyi on the grounds that the display of the data object provided by the Khoyi functionality was not interactive, and in the ’906 invention such interactivity could be achieved “without requiring Khoyi-like capabilities in the operating system.” Thus, the applicants distinguished Khoyi on the feature of interactivity, not on its use of standalone programs. While the applicants included language about library routines and DLLs in their response, they did not distinguish the ’906 invention based on these features, rather such features were merely included in language that outlined Khoyi’s operation. Similarly, the applicants distinguished Koppolu by pointing out that the particular kind of object handlers of Koppolu did not allow interactive processing of the object, because Koppolu did not enable such editing of the object.
 
In light of the applicant’s arguments distinguishing Khoyi and Koppolu, the examiner’s statement that “the claimed external executable application is not a code library extension nor object handler (e.g. windows dll and OLE) as pointed out in applicant’s argument. (Paper # 19 pages 12–14),” appears in the context of the applicant’s narrow argument. Thus, the examiner’s statement also does not evince a clear disclaimer. The arguments the examiner cited in the Reasons for Allowance simply describe OLE object handlers. The applicants cite problems with OLE object handlers, but do not disclaim anything. They simply argue that the cited references do “not disclose or suggest the *1338 missing features.” In addition, the applicant has “no obligation to respond to an examiner’s statement of Reasons for Allowance, and the statement of an examiner will not necessarily limit a claim.” ACCO Brands, Inc. v. Micro Sec. Devices, 346 F.3d 1075, 1079 (Fed.Cir.2003); see also N. Telecom Ltd., 215 F.3d at 1294 (requiring that prosecution history statements have “reasonable clarity and deliberateness” to narrow claim scope). Overall, without a narrow customary ordinary meaning for “executable application,” the district court correctly gleaned the proper definition of the term from the intrinsic evidence including the patent claims and prosecution history.
 
[18] Turning next to the jury instruction on “utilized by said browser to identify and locate,” the district court informed the jurors that “[t]he inventors contemplated the browser’s use of some outside resources such as the operating system.” A review of the trial record shows that Microsoft waived its right to appeal this issue.
 
Microsoft commented on the proposed jury instructions to the district court. In discussing the particular sentence Microsoft now takes issue with, Microsoft’s counsel stated to the district court, “It’s undisputable, but it’s also immaterial ... the fact that operating systems are involved in the operation of computer programs, so what?” The district court sought at that point to clarify the record: “[N]o one is arguing here that the browser cannot use the operating system ... it simply can’t be done and, in essence, Microsoft is not taking the crazy position that what they mean is the browser can’t use the operating system at all.” Microsoft’s counsel responded, “That’s correct.”
 
Thus, the record shows that Microsoft did not properly preserve this issue for appeal. “It is rare indeed for appellate relief to be granted when no objection was raised at trial.... Under such circumstances, the question devolves into whether an error occurred in the conduct of the trial that was so grievous as to have rendered the trial unfair.” Norian Corp. v. Stryker Corp., 363 F.3d 1321, 1329 (Fed.Cir.2004) (internal citation and quotation omitted). This court detects no grievous unfairness in this instruction despite Microsoft’s argument that a properly instructed jury could not have possibly found that the accused products infringe. As a whole, the jury instruction properly guided the jury. Thus, the district court did not err in its jury instruction on this disputed claim term.
 

35 U.S.C. § 271(f)
[19] This court must also decide whether software code made in the United States and exported abroad is a “component[ ] of a patented invention” under section 271(f). Section 271(f)(1) states:
Whoever without authority supplies or causes to be supplied in or from the United States all or a substantial portion of the components of a patented invention, where such components are uncombined in whole or in part, in such a manner as to actively induce the combination of such components outside the United States in a manner that would infringe the patent if such combination occurred within the United States shall be liable as an infringer.
35 U.S.C. § 271(f)(1) (2000). Section 271(f) refers to “components of a patented invention.” This statutory language uses the broad and inclusive term “patented invention.” Title 35, in the definitions section, defines “invention” to mean “invention or discovery”—again broad and inclusive terminology. 35 U.S.C. § 100(a) (2000). The next section in Title 35, section 101, explains that an invention *1339 includes “any new and useful process, machine, manufacture or composition of matter.” 35 U.S.C. § 101 (2000). Without question, software code alone qualifies as an invention eligible for patenting under these categories, at least as processes. See In re Alappat, 33 F.3d 1526 (Fed.Cir.1994); AT&T Corp. v. Excel Communications, Inc., 172 F.3d 1352 (Fed.Cir.1999); MPEP § 2106.IV.B.1.a. (8th ed., rev. 2 2001). The patented invention in this case is such a software product. ’906 patent, col. 17, ll. 58—col. 18, ll. 30. Thus, this software code claimed in conjunction with a physical structure, such as a disk, fits within at least those two categories of subject matter within the broad statutory label of “patented invention.”
 
This statutory language did not limit section 271(f) to patented “machines” or patented “physical structures.” Rather every form of invention eligible for patenting falls within the protection of section 271(f). By the same token, the statute did not limit section 271(f) to “machine” components or “structural or physical” components. Rather every component of every form of invention deserves the protection of section 271(f).
 
In examining the statutory language of section 271(f), this court must next examine whether the software code on the golden master disk is a “component” of the computer program invention. A “component” of a process invention would encompass method steps or acts. See, e.g., 35 U.S.C. § 112, ¶ 6 (2000). A “component” of an article of manufacture invention would encompass a part of that construct. Because a computer program product is a patented invention within the meaning of Title 35, then the “computer readable program code” claimed in claim 6 of the ’906 patent is a part or component of that patented invention.
 
Exact duplicates of the software code on the golden master disk are incorporated as an operating element of the ultimate device. This part of the software code is much more than a prototype, mold, or detailed set of instructions. This operating element in effect drives the “functional nucleus of the finished computer product.” Imagexpo, L.L.C. v. Microsoft, Corp., 299 F.Supp.2d 550, 553 (E.D.Va.2003). Without this aspect of the patented invention, the invention would not work at all and thus would not even qualify as new and “useful.” Thus, the software code on the golden master disk is not only a component, it is probably the key part of this patented invention. Therefore, the language of section 271(f) in the context of Title 35 shows that this part of the claimed computer product is a “component of a patented invention.”
 
Sound patent policy also supports the meaning of section 271(f). In the first place, this court accords the same treatment to all forms of invention. See, e.g., TRIPS Agreement, Part II, Section 5 (1994) (“[P]atents shall be available and patent rights enjoyable without discrimination as to the place of invention[ ][and] the field of technology ....”). This court cannot construct a principled reason for treating process inventions different than structural products. Moreover, as the district court pointed out, process and product—software and hardware—are practically interchangeable in the field of computer technology. Eolas Techs., Inc. v. Microsoft Corp., 274 F.Supp.2d 972, 974 (N.D.Ill.2003). On a functioning computer, software morphs into hardware and vice versa at the touch of a button. In other words, software converts its functioning code into hardware and vice versa. Thus in the context of this patented invention, the computer transforms the code on the golden disk into a machine component in operation. Thus, sound policy again counsels *1340 against varying the definition of “component of a patented invention” according to the particular form of the part under consideration, particularly when those parts change form during operation of the invention as occurs with software code.
 
The legislative history of section 271(f) also supports the meaning carried by the language itself. Congress enacted section 271(f) in the wake of the United States Supreme Court’s decision in Deepsouth Packing Co. v. Laitram Corp., 406 U.S. 518, 92 S.Ct. 1700, 32 L.Ed.2d 273 (1972). Deepsouth acknowledged that unauthorized manufacturers of patented products could avoid liability for infringement under the then-existing law by manufacturing the unassembled components of those products in the United States and then shipping them outside the United States for assembly. Section 271(f) closed that obvious loophole in the statutory protections for patented inventions. Rotec Indus., Inc. v. Mitsubishi Corp., 215 F.3d 1246, 1252 n. 2 (Fed.Cir.2000). One Congressional commentator stated this purpose expressly:
Section 101 [of the Bill] makes two major changes in the patent law in order to avoid encouraging manufacturers outside the United States.
....
[Section 271(f) ] will prevent copiers from avoiding U.S. patents by supplying components of a patented product in this country so that the assembly of the components may be completed abroad. This proposal responds to the ... decision in Deepsouth ... concerning the need for a legislative solution to close a loophole in patent law.
130 Cong. Rec. H10525 (1984). These references again refer to correcting a loophole for all forms of patented inventions.
 
Microsoft and amici argue that Congress’ use of “components” must be identical to the “components” of the patented invention in Deepsouth. In other words, since Deepsouth dealt with the components of a physical machine, section 271(f)’s “components” are limited to physical machines. This argument finds no support in the language or history of the statute.
 
As already noted, the language of section 271(f) does not impose a requirement of “tangibility” on any component of a patented invention. See Alan M. Fisch & Brent H. Allen, The Application of Domestic Patent Law to Exported Software: 35 U.S.C. § 271(f), 25 U. Pa. J. Int’l Econ. L. 557, 575 (2004). In fact, neither the statute nor the legislative history contains a limitation to “components of machines and other structural combinations.” Id. Microsoft, in effect, asks this court to add the word “physical” in front of “components” in section 271(f). If the statute intended to limit the reach of “components of patented inventions,” it would have expressly included some narrowing restriction. The statute simply does not include the limitation that Microsoft advocates.
 
Microsoft also argues this court’s holding in Pellegrini v. Analog Devices, Inc., 375 F.3d 1113 (Fed.Cir.2004), imposes a requirement that components in section 271(f) are physical. In the first place, this court in Pellegrini did not address the meaning of the “components” language in section 271(f). Moreover, Microsoft simply misreads the language of Pellegrini.
 
In Pellegrini, this court held that section 271(f) did not apply to components manufactured outside the United States and never physically shipped to or from the United States. 375 F.3d at 1118. The court then explained that
‘[s]uppl[ying] or caus[ing] to be supplied’ in § 271(f)(2) clearly refers to physical supply of components, not simply to the supply of instructions or corporate oversight. In other words, although Analog *1341 may be giving instructions from the United States that cause the components of the patented invention to be supplied, it is undisputed that those components are not being supplied in or from the United States.
Id. Thus, Pellegrini requires only that components are physically supplied from the United States. Pellegrini does not impose on section 271(f) a tangibility requirement that does not appear anywhere in the language of that section.
 
In sum, the language and history of section 271(f)(1) as well as this court’s law protecting software inventions support this court’s holding that section 271(f)(1)’s “components” include software code on golden master disks.
 

IV.
In conclusion, because the district court improperly granted JMOL in Eolas’ favor on Microsoft’s anticipation and obviousness defenses and improperly rejected Microsoft’s inequitable conduct defense, this court vacates the district court’s decisions and remands for further proceedings on these issues. In addition, this court affirms the district court’s claim construction of “executable application” and finds the district court did not err in its jury instruction with regard to the claim limitation “utilized by said browser to identify and locate.” Finally, this court affirms the district court’s holding that “components,” according to section 271(f)(1), includes software code on golden master disks.
 

COSTS
Each party shall bear its own costs.
 

AFFIRMED–IN–PART, VACATED–IN–PART, and REMANDED
All Citations
399 F.3d 1325, 73 U.S.P.Q.2d 1782
Footnotes

*

Circuit Judge Garjarsa and Circuit Judge Dyk did not participate in the vote.

1

The University of California filed the ’906 Patent on October 17, 1994, which later issued on November 17, 1998. The University later granted an exclusive license for the ’906 Patent to Eolas. A reexamination of the ’906 Patent was ordered by the Director and is currently pending in the United States Patent and Trademark Office. See Director Initiated Order for Reexamination, Control No. 90/006,831.

2

OLE allows a visual object or data created using one application to be displayed and edited in another application.

3

An example of a DLL is spell check; a DLL is a component that can run only within another application. Compare a standalone application, such as Word or Excel, which can run independently of another application. An implementation of OLE technology would be using a standalone application, such as Word which may then utilize a component or DLL such as spell check.

4

A “beta” release occurs after the development stage and allows general users to try new software. An “alpha” release is a version for specialists to test to provide feedback to the software’s author.


End of Document

© 2017 Thomson Reuters. No claim to original U.S. Government Works.


